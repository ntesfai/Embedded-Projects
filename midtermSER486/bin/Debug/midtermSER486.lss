
bin/Debug/midtermSER486.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  0000044c  00000500  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000044c  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000084  00800100  00800100  00000500  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00000500  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .stab         000007f8  00000000  00000000  00000504  2**2
                  CONTENTS, READONLY, DEBUGGING
  5 .stabstr      00000bec  00000000  00000000  00000cfc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .comment      00000011  00000000  00000000  000018e8  2**0
                  CONTENTS, READONLY
  7 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000018fc  2**2
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 08 01 	jmp	0x210	; 0x210 <__vector_18>
  4c:	0c 94 39 01 	jmp	0x272	; 0x272 <__vector_19>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a4 38       	cpi	r26, 0x84	; 132
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 e7 01 	call	0x3ce	; 0x3ce <main>
  88:	0c 94 24 02 	jmp	0x448	; 0x448 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <size_of>:
 the requirements set on the midterm.
 */

#include "uart.h"

void size_of(void* data) {
  90:	cf 93       	push	r28
  92:	df 93       	push	r29
  94:	ec 01       	movw	r28, r24
    char *char_ptr = (data);
    int *int_ptr = (data);
    long int *li_ptr = (data);
    uart_writehex8(*char_ptr);
  96:	88 81       	ld	r24, Y
  98:	0e 94 68 00 	call	0xd0	; 0xd0 <uart_writehex8>
    uart_writehex8(*int_ptr);
  9c:	88 81       	ld	r24, Y
  9e:	0e 94 68 00 	call	0xd0	; 0xd0 <uart_writehex8>
    uart_writehex8(*li_ptr);
  a2:	88 81       	ld	r24, Y
}
  a4:	df 91       	pop	r29
  a6:	cf 91       	pop	r28
    char *char_ptr = (data);
    int *int_ptr = (data);
    long int *li_ptr = (data);
    uart_writehex8(*char_ptr);
    uart_writehex8(*int_ptr);
    uart_writehex8(*li_ptr);
  a8:	0c 94 68 00 	jmp	0xd0	; 0xd0 <uart_writehex8>

000000ac <uart_init>:
  ac:	0e 94 f5 00 	call	0x1ea	; 0x1ea <serial_init>
  b0:	78 94       	sei
  b2:	08 95       	ret

000000b4 <uart_writechar>:
  b4:	0c 94 8d 01 	jmp	0x31a	; 0x31a <serial_writechar>

000000b8 <uart_writestr>:
  b8:	cf 93       	push	r28
  ba:	df 93       	push	r29
  bc:	ec 01       	movw	r28, r24
  be:	89 91       	ld	r24, Y+
  c0:	88 23       	and	r24, r24
  c2:	19 f0       	breq	.+6      	; 0xca <uart_writestr+0x12>
  c4:	0e 94 8d 01 	call	0x31a	; 0x31a <serial_writechar>
  c8:	fa cf       	rjmp	.-12     	; 0xbe <uart_writestr+0x6>
  ca:	df 91       	pop	r29
  cc:	cf 91       	pop	r28
  ce:	08 95       	ret

000000d0 <uart_writehex8>:
  d0:	cf 93       	push	r28
  d2:	c8 2f       	mov	r28, r24
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	24 e0       	ldi	r18, 0x04	; 4
  d8:	95 95       	asr	r25
  da:	87 95       	ror	r24
  dc:	2a 95       	dec	r18
  de:	e1 f7       	brne	.-8      	; 0xd8 <uart_writehex8+0x8>
  e0:	8a 30       	cpi	r24, 0x0A	; 10
  e2:	10 f4       	brcc	.+4      	; 0xe8 <uart_writehex8+0x18>
  e4:	80 5d       	subi	r24, 0xD0	; 208
  e6:	01 c0       	rjmp	.+2      	; 0xea <uart_writehex8+0x1a>
  e8:	89 5c       	subi	r24, 0xC9	; 201
  ea:	0e 94 8d 01 	call	0x31a	; 0x31a <serial_writechar>
  ee:	8c 2f       	mov	r24, r28
  f0:	8f 70       	andi	r24, 0x0F	; 15
  f2:	8a 30       	cpi	r24, 0x0A	; 10
  f4:	10 f0       	brcs	.+4      	; 0xfa <uart_writehex8+0x2a>
  f6:	89 5c       	subi	r24, 0xC9	; 201
  f8:	01 c0       	rjmp	.+2      	; 0xfc <uart_writehex8+0x2c>
  fa:	80 5d       	subi	r24, 0xD0	; 208
  fc:	cf 91       	pop	r28
  fe:	0c 94 8d 01 	jmp	0x31a	; 0x31a <serial_writechar>

00000102 <uart_writehex16>:
 102:	cf 93       	push	r28
 104:	c8 2f       	mov	r28, r24
 106:	89 2f       	mov	r24, r25
 108:	0e 94 68 00 	call	0xd0	; 0xd0 <uart_writehex8>
 10c:	8c 2f       	mov	r24, r28
 10e:	cf 91       	pop	r28
 110:	0c 94 68 00 	jmp	0xd0	; 0xd0 <uart_writehex8>

00000114 <uart_writedec32>:
 114:	8f 92       	push	r8
 116:	9f 92       	push	r9
 118:	af 92       	push	r10
 11a:	bf 92       	push	r11
 11c:	cf 92       	push	r12
 11e:	df 92       	push	r13
 120:	ef 92       	push	r14
 122:	ff 92       	push	r15
 124:	0f 93       	push	r16
 126:	1f 93       	push	r17
 128:	cf 93       	push	r28
 12a:	df 93       	push	r29
 12c:	00 d0       	rcall	.+0      	; 0x12e <uart_writedec32+0x1a>
 12e:	00 d0       	rcall	.+0      	; 0x130 <uart_writedec32+0x1c>
 130:	1f 92       	push	r1
 132:	cd b7       	in	r28, 0x3d	; 61
 134:	de b7       	in	r29, 0x3e	; 62
 136:	9c 01       	movw	r18, r24
 138:	97 ff       	sbrs	r25, 7
 13a:	07 c0       	rjmp	.+14     	; 0x14a <uart_writedec32+0x36>
 13c:	31 95       	neg	r19
 13e:	21 95       	neg	r18
 140:	31 09       	sbc	r19, r1
 142:	aa 24       	eor	r10, r10
 144:	a3 94       	inc	r10
 146:	b1 2c       	mov	r11, r1
 148:	02 c0       	rjmp	.+4      	; 0x14e <uart_writedec32+0x3a>
 14a:	a1 2c       	mov	r10, r1
 14c:	b1 2c       	mov	r11, r1
 14e:	ce 01       	movw	r24, r28
 150:	01 96       	adiw	r24, 0x01	; 1
 152:	7c 01       	movw	r14, r24
 154:	8e 01       	movw	r16, r28
 156:	0a 5f       	subi	r16, 0xFA	; 250
 158:	1f 4f       	sbci	r17, 0xFF	; 255
 15a:	fc 01       	movw	r30, r24
 15c:	cc 24       	eor	r12, r12
 15e:	c3 94       	inc	r12
 160:	d1 2c       	mov	r13, r1
 162:	4a e0       	ldi	r20, 0x0A	; 10
 164:	4c 9d       	mul	r20, r12
 166:	40 01       	movw	r8, r0
 168:	4d 9d       	mul	r20, r13
 16a:	90 0c       	add	r9, r0
 16c:	11 24       	eor	r1, r1
 16e:	c9 01       	movw	r24, r18
 170:	b4 01       	movw	r22, r8
 172:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <__divmodhi4>
 176:	b6 01       	movw	r22, r12
 178:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <__divmodhi4>
 17c:	61 93       	st	Z+, r22
 17e:	26 1b       	sub	r18, r22
 180:	31 09       	sbc	r19, r1
 182:	67 fd       	sbrc	r22, 7
 184:	33 95       	inc	r19
 186:	64 01       	movw	r12, r8
 188:	e0 17       	cp	r30, r16
 18a:	f1 07       	cpc	r31, r17
 18c:	59 f7       	brne	.-42     	; 0x164 <uart_writedec32+0x50>
 18e:	ab 28       	or	r10, r11
 190:	11 f0       	breq	.+4      	; 0x196 <uart_writedec32+0x82>
 192:	8d e2       	ldi	r24, 0x2D	; 45
 194:	01 c0       	rjmp	.+2      	; 0x198 <uart_writedec32+0x84>
 196:	80 e2       	ldi	r24, 0x20	; 32
 198:	0e 94 8d 01 	call	0x31a	; 0x31a <serial_writechar>
 19c:	20 e0       	ldi	r18, 0x00	; 0
 19e:	30 e0       	ldi	r19, 0x00	; 0
 1a0:	f8 01       	movw	r30, r16
 1a2:	82 91       	ld	r24, -Z
 1a4:	8f 01       	movw	r16, r30
 1a6:	81 11       	cpse	r24, r1
 1a8:	06 c0       	rjmp	.+12     	; 0x1b6 <uart_writedec32+0xa2>
 1aa:	21 15       	cp	r18, r1
 1ac:	31 05       	cpc	r19, r1
 1ae:	19 f4       	brne	.+6      	; 0x1b6 <uart_writedec32+0xa2>
 1b0:	ee 15       	cp	r30, r14
 1b2:	ff 05       	cpc	r31, r15
 1b4:	29 f4       	brne	.+10     	; 0x1c0 <uart_writedec32+0xac>
 1b6:	80 5d       	subi	r24, 0xD0	; 208
 1b8:	0e 94 8d 01 	call	0x31a	; 0x31a <serial_writechar>
 1bc:	21 e0       	ldi	r18, 0x01	; 1
 1be:	30 e0       	ldi	r19, 0x00	; 0
 1c0:	0e 15       	cp	r16, r14
 1c2:	1f 05       	cpc	r17, r15
 1c4:	69 f7       	brne	.-38     	; 0x1a0 <uart_writedec32+0x8c>
 1c6:	0f 90       	pop	r0
 1c8:	0f 90       	pop	r0
 1ca:	0f 90       	pop	r0
 1cc:	0f 90       	pop	r0
 1ce:	0f 90       	pop	r0
 1d0:	df 91       	pop	r29
 1d2:	cf 91       	pop	r28
 1d4:	1f 91       	pop	r17
 1d6:	0f 91       	pop	r16
 1d8:	ff 90       	pop	r15
 1da:	ef 90       	pop	r14
 1dc:	df 90       	pop	r13
 1de:	cf 90       	pop	r12
 1e0:	bf 90       	pop	r11
 1e2:	af 90       	pop	r10
 1e4:	9f 90       	pop	r9
 1e6:	8f 90       	pop	r8
 1e8:	08 95       	ret

000001ea <serial_init>:
 1ea:	10 92 c0 00 	sts	0x00C0, r1
 1ee:	87 e6       	ldi	r24, 0x67	; 103
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	90 93 c5 00 	sts	0x00C5, r25
 1f6:	80 93 c4 00 	sts	0x00C4, r24
 1fa:	e1 ec       	ldi	r30, 0xC1	; 193
 1fc:	f0 e0       	ldi	r31, 0x00	; 0
 1fe:	88 e1       	ldi	r24, 0x18	; 24
 200:	80 83       	st	Z, r24
 202:	86 e0       	ldi	r24, 0x06	; 6
 204:	80 93 c2 00 	sts	0x00C2, r24
 208:	80 81       	ld	r24, Z
 20a:	80 6a       	ori	r24, 0xA0	; 160
 20c:	80 83       	st	Z, r24
 20e:	08 95       	ret

00000210 <__vector_18>:
 210:	1f 92       	push	r1
 212:	0f 92       	push	r0
 214:	0f b6       	in	r0, 0x3f	; 63
 216:	0f 92       	push	r0
 218:	11 24       	eor	r1, r1
 21a:	2f 93       	push	r18
 21c:	8f 93       	push	r24
 21e:	9f 93       	push	r25
 220:	ef 93       	push	r30
 222:	ff 93       	push	r31
 224:	80 91 02 01 	lds	r24, 0x0102
 228:	20 91 03 01 	lds	r18, 0x0103
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	82 1b       	sub	r24, r18
 230:	91 09       	sbc	r25, r1
 232:	01 97       	sbiw	r24, 0x01	; 1
 234:	8f 73       	andi	r24, 0x3F	; 63
 236:	99 27       	eor	r25, r25
 238:	89 2b       	or	r24, r25
 23a:	79 f0       	breq	.+30     	; 0x25a <__vector_18+0x4a>
 23c:	e0 91 03 01 	lds	r30, 0x0103
 240:	f0 e0       	ldi	r31, 0x00	; 0
 242:	80 91 c6 00 	lds	r24, 0x00C6
 246:	ec 5f       	subi	r30, 0xFC	; 252
 248:	fe 4f       	sbci	r31, 0xFE	; 254
 24a:	80 83       	st	Z, r24
 24c:	80 91 03 01 	lds	r24, 0x0103
 250:	8f 5f       	subi	r24, 0xFF	; 255
 252:	8f 73       	andi	r24, 0x3F	; 63
 254:	80 93 03 01 	sts	0x0103, r24
 258:	02 c0       	rjmp	.+4      	; 0x25e <__vector_18+0x4e>
 25a:	80 91 c6 00 	lds	r24, 0x00C6
 25e:	ff 91       	pop	r31
 260:	ef 91       	pop	r30
 262:	9f 91       	pop	r25
 264:	8f 91       	pop	r24
 266:	2f 91       	pop	r18
 268:	0f 90       	pop	r0
 26a:	0f be       	out	0x3f, r0	; 63
 26c:	0f 90       	pop	r0
 26e:	1f 90       	pop	r1
 270:	18 95       	reti

00000272 <__vector_19>:
 272:	1f 92       	push	r1
 274:	0f 92       	push	r0
 276:	0f b6       	in	r0, 0x3f	; 63
 278:	0f 92       	push	r0
 27a:	11 24       	eor	r1, r1
 27c:	2f 93       	push	r18
 27e:	8f 93       	push	r24
 280:	9f 93       	push	r25
 282:	ef 93       	push	r30
 284:	ff 93       	push	r31
 286:	80 91 01 01 	lds	r24, 0x0101
 28a:	20 91 00 01 	lds	r18, 0x0100
 28e:	90 e0       	ldi	r25, 0x00	; 0
 290:	82 1b       	sub	r24, r18
 292:	91 09       	sbc	r25, r1
 294:	8f 73       	andi	r24, 0x3F	; 63
 296:	99 27       	eor	r25, r25
 298:	89 2b       	or	r24, r25
 29a:	79 f0       	breq	.+30     	; 0x2ba <__vector_19+0x48>
 29c:	e0 91 00 01 	lds	r30, 0x0100
 2a0:	f0 e0       	ldi	r31, 0x00	; 0
 2a2:	ec 5b       	subi	r30, 0xBC	; 188
 2a4:	fe 4f       	sbci	r31, 0xFE	; 254
 2a6:	80 81       	ld	r24, Z
 2a8:	80 93 c6 00 	sts	0x00C6, r24
 2ac:	80 91 00 01 	lds	r24, 0x0100
 2b0:	8f 5f       	subi	r24, 0xFF	; 255
 2b2:	8f 73       	andi	r24, 0x3F	; 63
 2b4:	80 93 00 01 	sts	0x0100, r24
 2b8:	05 c0       	rjmp	.+10     	; 0x2c4 <__vector_19+0x52>
 2ba:	80 91 c1 00 	lds	r24, 0x00C1
 2be:	8f 7d       	andi	r24, 0xDF	; 223
 2c0:	80 93 c1 00 	sts	0x00C1, r24
 2c4:	ff 91       	pop	r31
 2c6:	ef 91       	pop	r30
 2c8:	9f 91       	pop	r25
 2ca:	8f 91       	pop	r24
 2cc:	2f 91       	pop	r18
 2ce:	0f 90       	pop	r0
 2d0:	0f be       	out	0x3f, r0	; 63
 2d2:	0f 90       	pop	r0
 2d4:	1f 90       	pop	r1
 2d6:	18 95       	reti

000002d8 <serial_rxchars>:
 2d8:	80 91 03 01 	lds	r24, 0x0103
 2dc:	90 91 02 01 	lds	r25, 0x0102
 2e0:	89 1b       	sub	r24, r25
 2e2:	8f 73       	andi	r24, 0x3F	; 63
 2e4:	08 95       	ret

000002e6 <serial_popchar>:
 2e6:	80 91 03 01 	lds	r24, 0x0103
 2ea:	20 91 02 01 	lds	r18, 0x0102
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	82 1b       	sub	r24, r18
 2f2:	91 09       	sbc	r25, r1
 2f4:	8f 73       	andi	r24, 0x3F	; 63
 2f6:	99 27       	eor	r25, r25
 2f8:	89 2b       	or	r24, r25
 2fa:	69 f0       	breq	.+26     	; 0x316 <serial_popchar+0x30>
 2fc:	e0 91 02 01 	lds	r30, 0x0102
 300:	f0 e0       	ldi	r31, 0x00	; 0
 302:	ec 5f       	subi	r30, 0xFC	; 252
 304:	fe 4f       	sbci	r31, 0xFE	; 254
 306:	80 81       	ld	r24, Z
 308:	90 91 02 01 	lds	r25, 0x0102
 30c:	9f 5f       	subi	r25, 0xFF	; 255
 30e:	9f 73       	andi	r25, 0x3F	; 63
 310:	90 93 02 01 	sts	0x0102, r25
 314:	08 95       	ret
 316:	80 e0       	ldi	r24, 0x00	; 0
 318:	08 95       	ret

0000031a <serial_writechar>:
 31a:	0f b6       	in	r0, 0x3f	; 63
 31c:	07 fe       	sbrs	r0, 7
 31e:	0e c0       	rjmp	.+28     	; 0x33c <serial_writechar+0x22>
 320:	20 91 00 01 	lds	r18, 0x0100
 324:	90 91 01 01 	lds	r25, 0x0101
 328:	30 e0       	ldi	r19, 0x00	; 0
 32a:	29 1b       	sub	r18, r25
 32c:	31 09       	sbc	r19, r1
 32e:	21 50       	subi	r18, 0x01	; 1
 330:	31 09       	sbc	r19, r1
 332:	2f 73       	andi	r18, 0x3F	; 63
 334:	33 27       	eor	r19, r19
 336:	23 2b       	or	r18, r19
 338:	99 f3       	breq	.-26     	; 0x320 <serial_writechar+0x6>
 33a:	0d c0       	rjmp	.+26     	; 0x356 <serial_writechar+0x3c>
 33c:	20 91 00 01 	lds	r18, 0x0100
 340:	90 91 01 01 	lds	r25, 0x0101
 344:	30 e0       	ldi	r19, 0x00	; 0
 346:	29 1b       	sub	r18, r25
 348:	31 09       	sbc	r19, r1
 34a:	21 50       	subi	r18, 0x01	; 1
 34c:	31 09       	sbc	r19, r1
 34e:	2f 73       	andi	r18, 0x3F	; 63
 350:	33 27       	eor	r19, r19
 352:	23 2b       	or	r18, r19
 354:	61 f0       	breq	.+24     	; 0x36e <serial_writechar+0x54>
 356:	e0 91 01 01 	lds	r30, 0x0101
 35a:	f0 e0       	ldi	r31, 0x00	; 0
 35c:	ec 5b       	subi	r30, 0xBC	; 188
 35e:	fe 4f       	sbci	r31, 0xFE	; 254
 360:	80 83       	st	Z, r24
 362:	80 91 01 01 	lds	r24, 0x0101
 366:	8f 5f       	subi	r24, 0xFF	; 255
 368:	8f 73       	andi	r24, 0x3F	; 63
 36a:	80 93 01 01 	sts	0x0101, r24
 36e:	80 91 c1 00 	lds	r24, 0x00C1
 372:	80 62       	ori	r24, 0x20	; 32
 374:	80 93 c1 00 	sts	0x00C1, r24
 378:	08 95       	ret

0000037a <serial_writestr>:
 37a:	1f 93       	push	r17
 37c:	cf 93       	push	r28
 37e:	df 93       	push	r29
 380:	ec 01       	movw	r28, r24
 382:	90 e0       	ldi	r25, 0x00	; 0
 384:	11 e0       	ldi	r17, 0x01	; 1
 386:	19 0f       	add	r17, r25
 388:	fe 01       	movw	r30, r28
 38a:	e9 0f       	add	r30, r25
 38c:	f1 1d       	adc	r31, r1
 38e:	80 81       	ld	r24, Z
 390:	88 23       	and	r24, r24
 392:	21 f0       	breq	.+8      	; 0x39c <serial_writestr+0x22>
 394:	0e 94 8d 01 	call	0x31a	; 0x31a <serial_writechar>
 398:	91 2f       	mov	r25, r17
 39a:	f4 cf       	rjmp	.-24     	; 0x384 <serial_writestr+0xa>
 39c:	df 91       	pop	r29
 39e:	cf 91       	pop	r28
 3a0:	1f 91       	pop	r17
 3a2:	08 95       	ret

000003a4 <serial_writestr_P>:
 3a4:	1f 93       	push	r17
 3a6:	cf 93       	push	r28
 3a8:	df 93       	push	r29
 3aa:	ec 01       	movw	r28, r24
 3ac:	90 e0       	ldi	r25, 0x00	; 0
 3ae:	11 e0       	ldi	r17, 0x01	; 1
 3b0:	19 0f       	add	r17, r25
 3b2:	fe 01       	movw	r30, r28
 3b4:	e9 0f       	add	r30, r25
 3b6:	f1 1d       	adc	r31, r1
 3b8:	84 91       	lpm	r24, Z
 3ba:	88 23       	and	r24, r24
 3bc:	21 f0       	breq	.+8      	; 0x3c6 <serial_writestr_P+0x22>
 3be:	0e 94 8d 01 	call	0x31a	; 0x31a <serial_writechar>
 3c2:	91 2f       	mov	r25, r17
 3c4:	f4 cf       	rjmp	.-24     	; 0x3ae <serial_writestr_P+0xa>
 3c6:	df 91       	pop	r29
 3c8:	cf 91       	pop	r28
 3ca:	1f 91       	pop	r17
 3cc:	08 95       	ret

000003ce <main>:
}
int main(void)
{
 3ce:	cf 93       	push	r28
 3d0:	df 93       	push	r29
 3d2:	00 d0       	rcall	.+0      	; 0x3d4 <main+0x6>
 3d4:	00 d0       	rcall	.+0      	; 0x3d6 <main+0x8>
 3d6:	cd b7       	in	r28, 0x3d	; 61
 3d8:	de b7       	in	r29, 0x3e	; 62
    long int data = 50;
 3da:	82 e3       	ldi	r24, 0x32	; 50
 3dc:	90 e0       	ldi	r25, 0x00	; 0
 3de:	a0 e0       	ldi	r26, 0x00	; 0
 3e0:	b0 e0       	ldi	r27, 0x00	; 0
 3e2:	89 83       	std	Y+1, r24	; 0x01
 3e4:	9a 83       	std	Y+2, r25	; 0x02
 3e6:	ab 83       	std	Y+3, r26	; 0x03
 3e8:	bc 83       	std	Y+4, r27	; 0x04

    uart_init();
 3ea:	0e 94 56 00 	call	0xac	; 0xac <uart_init>
    size_of(&data);
 3ee:	ce 01       	movw	r24, r28
 3f0:	01 96       	adiw	r24, 0x01	; 1
 3f2:	0e 94 48 00 	call	0x90	; 0x90 <size_of>
    while(1)
    ;
 3f6:	ff cf       	rjmp	.-2      	; 0x3f6 <main+0x28>

000003f8 <__divmodhi4>:
 3f8:	97 fb       	bst	r25, 7
 3fa:	07 2e       	mov	r0, r23
 3fc:	16 f4       	brtc	.+4      	; 0x402 <__divmodhi4+0xa>
 3fe:	00 94       	com	r0
 400:	07 d0       	rcall	.+14     	; 0x410 <__divmodhi4_neg1>
 402:	77 fd       	sbrc	r23, 7
 404:	09 d0       	rcall	.+18     	; 0x418 <__divmodhi4_neg2>
 406:	0e 94 10 02 	call	0x420	; 0x420 <__udivmodhi4>
 40a:	07 fc       	sbrc	r0, 7
 40c:	05 d0       	rcall	.+10     	; 0x418 <__divmodhi4_neg2>
 40e:	3e f4       	brtc	.+14     	; 0x41e <__divmodhi4_exit>

00000410 <__divmodhi4_neg1>:
 410:	90 95       	com	r25
 412:	81 95       	neg	r24
 414:	9f 4f       	sbci	r25, 0xFF	; 255
 416:	08 95       	ret

00000418 <__divmodhi4_neg2>:
 418:	70 95       	com	r23
 41a:	61 95       	neg	r22
 41c:	7f 4f       	sbci	r23, 0xFF	; 255

0000041e <__divmodhi4_exit>:
 41e:	08 95       	ret

00000420 <__udivmodhi4>:
 420:	aa 1b       	sub	r26, r26
 422:	bb 1b       	sub	r27, r27
 424:	51 e1       	ldi	r21, 0x11	; 17
 426:	07 c0       	rjmp	.+14     	; 0x436 <__udivmodhi4_ep>

00000428 <__udivmodhi4_loop>:
 428:	aa 1f       	adc	r26, r26
 42a:	bb 1f       	adc	r27, r27
 42c:	a6 17       	cp	r26, r22
 42e:	b7 07       	cpc	r27, r23
 430:	10 f0       	brcs	.+4      	; 0x436 <__udivmodhi4_ep>
 432:	a6 1b       	sub	r26, r22
 434:	b7 0b       	sbc	r27, r23

00000436 <__udivmodhi4_ep>:
 436:	88 1f       	adc	r24, r24
 438:	99 1f       	adc	r25, r25
 43a:	5a 95       	dec	r21
 43c:	a9 f7       	brne	.-22     	; 0x428 <__udivmodhi4_loop>
 43e:	80 95       	com	r24
 440:	90 95       	com	r25
 442:	bc 01       	movw	r22, r24
 444:	cd 01       	movw	r24, r26
 446:	08 95       	ret

00000448 <_exit>:
 448:	f8 94       	cli

0000044a <__stop_program>:
 44a:	ff cf       	rjmp	.-2      	; 0x44a <__stop_program>
